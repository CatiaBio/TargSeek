# config/config_analysis.yaml
# ------------------------------------------------------
# Configuration file for TargSeek Analysis Pipeline
#
# Defines all paths, thresholds, and settings for protein sequence
# analysis, multiple sequence alignment, conservation analysis,
# and epitope prediction.
#
# Only this file needs to be edited to adjust analysis parameters,
# thresholds, or update paths without modifying the Snakefile_analysis.
# ------------------------------------------------------

# =============================================================================
# PIPELINE CONFIGURATION
# =============================================================================

# Analysis batches - should match those used in download pipeline
species_batches:
  - analysis1
  #- analysis2
  #- analysis3

# QuickGO parameter sets - should match those used in download pipeline
quickgo_paramsets:
  - params1
  #- params2
  #- params3

# Defined Gram stain groups - should match download config
groups:
  - positive
  - negative

# =============================================================================
# ANALYSIS PARAMETERS
# =============================================================================

# MAFFT alignment settings
mafft:
  threads: 8
  # Choose which alignment type to use for downstream analysis:
  # "no_3d" - Use alignments without 3D structures
  # "with_3d" - Use alignments with 3D structures included
  use_3d_alignments: "no_3d"
  # Additional MAFFT parameters
  algorithm: "auto"  # auto, linsi, ginsi, einsi, fftns, fftnsi
  max_iterations: 1000

# MSA sequence selection settings
msa:
  # Maximum sequences per gene for MSA (null = unlimited, includes all available species)
  # Setting a limit can reduce computation time but may reduce phylogenetic diversity
  max_sequences_per_gene: null  # null = include all species, or set integer limit (e.g., 100)

# 3D Structure Selection settings
structure_selection:
  # Selection method: "similarity" (compare against protein sequences) or "priority" (organism priority)
  method: "similarity"
  # Maximum number of 3D structures to include per gene
  max_structures_per_gene: 1
  # Minimum combined score to include a structure (0.0-1.0)
  min_similarity_score: 0.1
  # Minimum coverage percentage of common amino acid stretches (0-100)
  min_coverage_percentage: 10.0
  # Similarity calculation method: "local_alignment", "global_alignment", or "lcs"
  similarity_method: "local_alignment"
  # Random seed for deterministic structure selection (set to null for random behavior)
  random_seed: 42

  # Combined scoring weights (must sum to 1.0)
  scoring_weights:
    # Weight for length similarity (how close structure length is to MSA average)
    length: 0.5
    # Weight for sequence similarity (amino acid identity in alignment)
    similarity: 0.3
    # Weight for coverage (how well structure aligns with MSA sequences)
    coverage: 0.2

  # Length-based filtering options
  length_filtering:
    # Enable length-based pre-filtering before alignment
    enable_prefilter: false
    # Maximum allowed deviation from MSA average length (as percentage)
    # E.g., 0.5 = structures can be 50% longer or shorter than MSA average
    max_length_deviation: 0.5

# Pipeline processing options
processing:
  # Enable/disable no_3d processing (alignments without 3D structures)
  enable_no_3d: false
  # Enable/disable with_3d processing (alignments with 3D structures)
  enable_with_3d: true

# Epitope analysis settings
epitope_analysis:
  # Minimum length for linear epitopes (residues)
  min_epitope_length: 6

# PyMOL 3D visualization settings
pymol_visualization:
  # Enable PyMOL epitope visualizations (requires PyMOL installation)
  enabled: true
  # Image resolution settings
  image_width: 1200
  image_height: 900
  image_dpi: 300
  # Enable ray tracing for high-quality images (slower)
  ray_tracing: true

# MSA Trimming settings - ClipKIT
trimming:
  # ClipKIT settings
  clipkit:
    # ClipKIT mode: "smart-gap" (recommended), "kpic", "kpic-smart-gap", "kpi", "gappy", etc.
    mode: "smart-gap"

# Conservation analysis settings
conservation:
  # Conservation scoring method: "shannon", "blosum62", "hybrid"
  # - shannon: Original entropy-based method (treats all AA substitutions equally)
  # - blosum62: BLOSUM62 substitution matrix-based scoring (biochemically aware)
  # - hybrid: Use BLOSUM62 for main analysis, ConSurf for top candidates
  scoring_method: "blosum62"

  # Minimum conservation score (0.0-1.0)
  min_conservation_score: 0.7
  # Window size for conservation analysis
  window_size: 5
  # Minimum number of sequences required for analysis
  min_sequences: 3
  # Create sequence logos
  create_logos: false

  # Hybrid approach settings (when scoring_method = "hybrid")
  hybrid:
    # Use ConSurf for top N genes ranked by BLOSUM62 conservation
    consurf_top_genes: 10
    # Minimum mean conservation score to qualify for ConSurf analysis
    consurf_min_conservation: 0.6
    # ConSurf analysis timeout (seconds)
    consurf_timeout: 3600
    # Enable ConSurf for high-priority conserved regions only
    consurf_conserved_regions_only: true

# ConSurf analysis configuration
consurf:
  # Path to ConSurf standalone script
  script_path: "tools/stand_alone_consurf/stand_alone_consurf.py"
  # Enable ConSurf analysis (set to false to skip)
  enabled: true

# Conserved sequence extraction configuration
conserved:
  # Minimum conservation score for including positions in conserved sequences (0.0-1.0)
  min_conservation: 0.5
  # Minimum length of conserved sequences to include in output (amino acids)
  min_length: 5

# BepiPred 3.0 epitope prediction configuration
bepipred:
  # Path to BepiPred 3.0 installation
  path: "tools/BepiPred3.0"
  # Prediction method: 'vt_pred' (recommended) or 'mjv_pred'
  method: "vt_pred"
  # Epitope score threshold (0.0-1.0, higher = more confident predictions)
  threshold: 0.5
  # Minimum epitope length (amino acids)
  min_epitope_length: 6
  # Top percentage of epitope residues to include (0.0-1.0)
  top_percentage: 0.5
  # Raw only mode: skip HTML visualizations and extra files for faster processing
  raw_only: true

# Topology prediction configuration
topology:
  # Topology prediction method: "deeptmhmm" (recommended) or "topcons"
  method: "deeptmhmm"
  # Minimum extracellular coverage required for epitope inclusion (0.0-1.0)
  min_extracellular_coverage: 0.5
  # Enable structure-based topology validation
  use_structure_validation: true


# Quality control thresholds
quality_control:
  # Minimum alignment length after trimming
  min_alignment_length: 50
  # Minimum number of species per alignment
  min_species_per_alignment: 3
  # Maximum gap percentage allowed in final alignment
  max_gap_percentage: 0.8

# Output settings
output:
  # Generate detailed logs for each step
  detailed_logs: true
  # Generate intermediate files for debugging
  keep_intermediate_files: false
  # Generate visualization plots
  generate_plots: true

# =============================================================================
# FILE SYSTEM PATHS
# =============================================================================

# Path templates - organized by analysis workflow stage
paths:

  # -------------------------------------------------------------------------
  # INPUT DATA (from download pipeline)
  # -------------------------------------------------------------------------
  input:
    # Gene selection results from download pipeline
    gene_lists: "results/{analysis}_{paramset}/gene_selection/genes_species/gram_{group}"
    protein_sequences: "data/protein_sequences"
    protein_download_sentinel: "data/protein_sequences/.{analysis}_{paramset}_{group}_download_complete"
    structures_download_sentinel: "data/protein_structures/.{analysis}_{paramset}_{group}_structures_complete"
    coverage_data: "results/{analysis}_{paramset}/gene_selection/coverage_count.tsv"
    proteins_to_study: "results/{analysis}_{paramset}/gene_selection/selected_genes_gram_{group}.txt"

  # -------------------------------------------------------------------------
  # STAGE 1: Sequence Preparation
  # -------------------------------------------------------------------------
  sequence_prep:
    # Base directory for all analysis outputs
    base_dir: "results/{analysis}_{paramset}/protein_analysis"
    # MSA sequence references
    msa_sequence_refs: "results/{analysis}_{paramset}/protein_analysis/msa_fasta/gram_{group}"
    # Selected 3D structure paths
    selected_3d_paths: "results/{analysis}_{paramset}/protein_analysis/selected_3d_paths_gram_{group}.txt"
    selected_3d_tsv: "results/{analysis}_{paramset}/protein_analysis/selected_3d_fasta_gram_{group}.tsv"

  # -------------------------------------------------------------------------
  # STAGE 2: Multiple Sequence Alignment
  # -------------------------------------------------------------------------
  msa:
    # MSA sequences
    sequences: "results/{analysis}_{paramset}/protein_analysis/sequences/gram_{group}"

    # Final MSA input sequences (FASTA files by gene)
    sequences_main: "results/{analysis}_{paramset}/protein_analysis/msa_fasta/gram_{group}"

    # MAFFT alignment results
    alignments_main: "results/{analysis}_{paramset}/protein_analysis/mafft_alignment/gram_{group}"
    alignments_structure: "results/{analysis}_{paramset}/protein_analysis/mafft_alignment_with_3d/gram_{group}"

    # ClipKIT trimmed alignments
    trimmed_structure: "results/{analysis}_{paramset}/protein_analysis/mafft_alignment_with_3d/trimmed/gram_{group}"

  # -------------------------------------------------------------------------
  # STAGE 3: Quality Assessment
  # -------------------------------------------------------------------------
  quality:
    # Alignment quality metrics
    assessment_structure: "results/{analysis}_{paramset}/protein_analysis/mafft_alignment_with_3d/quality/gram_{group}"

  # -------------------------------------------------------------------------
  # STAGE 4: Conservation Analysis
  # -------------------------------------------------------------------------
  conservation:
    # Conservation analysis results
    results_structure: "results/{analysis}_{paramset}/protein_analysis/mafft_alignment_with_3d/conservation/gram_{group}"
    # ConSurf analysis results
    consurf_results_dir: "results/{analysis}_{paramset}/protein_analysis/consurf_analysis/gram_{group}"
    consurf_sentinel: "results/{analysis}_{paramset}/protein_analysis/consurf_analysis/gram_{group}/.consurf_complete.sentinel"

  # -------------------------------------------------------------------------
  # STAGE 5: Conserved Sequence Extraction
  # -------------------------------------------------------------------------
  conserved:
    # Conserved sequences from raw alignments
    raw_sequences_main: "results/{analysis}_{paramset}/protein_analysis/sequences/conserved_sequences_raw_gram_{group}.tsv"
    raw_sequences_structure: "results/{analysis}_{paramset}/protein_analysis/sequences_with_structure/conserved_sequences_raw_gram_{group}.tsv"
    # Conserved sequences from trimmed alignments
    trimmed_sequences_main: "results/{analysis}_{paramset}/protein_analysis/sequences/conserved_sequences_trimmed_gram_{group}.tsv"
    trimmed_sequences_structure: "results/{analysis}_{paramset}/protein_analysis/sequences_with_structure/conserved_sequences_trimmed_gram_{group}.tsv"

  # -------------------------------------------------------------------------
  # STAGE 6: Epitope Prediction
  # -------------------------------------------------------------------------
  epitopes:
    # BepiPred 3.0 predictions
    bepipred_predictions: "results/{analysis}_{paramset}/protein_analysis/bepipred_epitope_predictions"
    # Epitope tables (linear epitopes and raw scores)
    epitope_tables_sentinel: "results/{analysis}_{paramset}/protein_analysis/bepipred_epitope_predictions/epitope_tables_complete.sentinel"
    # Epitope conservation analysis reports
    conservation_analysis_dir: "results/{analysis}_{paramset}/protein_analysis/epitope_conservation_analysis"
    conservation_analysis_sentinel: "results/{analysis}_{paramset}/protein_analysis/epitope_conservation_analysis/conservation_analysis_complete.sentinel"
    conservation_report: "results/{analysis}_{paramset}/protein_analysis_report.html"

  # -------------------------------------------------------------------------
  # STAGE 7: Topology Analysis and Epitope Filtering
  # -------------------------------------------------------------------------
  topology:
    # Base directory for topology analysis
    topology_dir: "results/{analysis}_{paramset}/protein_analysis/topology_analysis"
    # Topology prediction results
    topology_predictions: "results/{analysis}_{paramset}/protein_analysis/topology_analysis/topology_predictions.json"
    topology_summary: "results/{analysis}_{paramset}/protein_analysis/topology_analysis/topology_summary.json"
    # Extracellular region mapping
    extracellular_mapping: "results/{analysis}_{paramset}/protein_analysis/topology_analysis/extracellular_mapping.json"
    extracellular_summary: "results/{analysis}_{paramset}/protein_analysis/topology_analysis/extracellular_summary.json"
    # Filtered epitope results (only extracellular epitopes)
    filtered_epitopes_sentinel: "results/{analysis}_{paramset}/protein_analysis/topology_analysis/filtered_epitopes_complete.sentinel"
    topology_filter_report: "results/{analysis}_{paramset}/protein_analysis/topology_analysis/epitope_filter_report.json"

  # Integrated epitope analysis (combining BepiPred, ConSurf, and Topology)
  integrated_epitope_analysis:
    output_dir: "results/{analysis}_{paramset}/protein_analysis/integrated_epitope_analysis"
    sentinel: "results/{analysis}_{paramset}/protein_analysis/integrated_epitope_analysis/integrated_analysis_complete.sentinel"

  # -------------------------------------------------------------------------
  # STAGE 8: Summaries and Reports
  # -------------------------------------------------------------------------
  # reports:
    # Final integrated reports (EXCLUDED from this pipeline)
    # final_report: "results/{analysis}_{paramset}/protein_analysis_report_{use_3d_dir}.html"

# =============================================================================
# SCRIPT PATHS
# =============================================================================

# Script paths - organized by analysis stage
scripts:

  # -------------------------------------------------------------------------
  # STAGE 1: Sequence Preparation Scripts
  # -------------------------------------------------------------------------
  sequence_prep:
    create_sequences: "scripts/protein_analysis/create_main_msa_sequences.py"
    select_3d_from_sequences: "scripts/protein_analysis/select_3d_from_main_msa.py"
    create_final_msa: "scripts/protein_analysis/create_final_msa_files.py"

  # -------------------------------------------------------------------------
  # STAGE 2: Multiple Sequence Alignment Scripts
  # -------------------------------------------------------------------------
  msa:
    run_mafft_alignments: "scripts/protein_analysis/run_mafft_alignments.py"
    trim_alignments: "scripts/protein_analysis/trim_alignments.py"
    # Shell scripts for MAFFT alignment
    run_mafft_shell: "scripts/protein_analysis/run_mafft.sh"
    add_3d_to_mafft_shell: "scripts/protein_analysis/add_3d_to_mafft.sh"

  # -------------------------------------------------------------------------
  # STAGE 3: Quality Assessment Scripts
  # -------------------------------------------------------------------------
  quality:
    assess_alignment_quality: "scripts/protein_analysis/assess_alignment_quality_comparison.py"

  # -------------------------------------------------------------------------
  # STAGE 4: Conservation Analysis Scripts
  # -------------------------------------------------------------------------
  conservation:
    analyze_conservation: "scripts/protein_analysis/analyze_conservation_adaptive.py"
    run_consurf_analysis: "scripts/protein_analysis/run_consurf_analysis.py"

  # -------------------------------------------------------------------------
  # STAGE 5: Conserved Sequence Extraction Scripts
  # -------------------------------------------------------------------------
  conserved:
    extract_sequences: "scripts/protein_analysis/extract_conserved_sequences.py"

  # -------------------------------------------------------------------------
  # STAGE 6: Epitope Prediction Scripts
  # -------------------------------------------------------------------------
  epitopes:
    predict_epitopes_bepipred: "scripts/protein_analysis/predict_epitopes_bepipred_3d_only.py"
    create_epitope_tables: "scripts/protein_analysis/create_epitope_tables_from_bepipred.py"
    visualize_epitopes_pymol: "scripts/protein_analysis/visualize_epitopes_pymol.py"
    analyze_epitope_conservation: "scripts/protein_analysis/analyze_epitope_conservation.py"
    integrate_epitope_analysis: "scripts/protein_analysis/integrate_epitope_analysis.py"

  # -------------------------------------------------------------------------
  # STAGE 7: Topology Analysis Scripts
  # -------------------------------------------------------------------------
  topology:
    predict_topology: "scripts/protein_analysis/predict_topology.py"
    map_extracellular_regions: "scripts/protein_analysis/map_extracellular_regions.py"
    filter_epitopes_topology: "scripts/protein_analysis/filter_epitopes_topology.py"

  # -------------------------------------------------------------------------
  # STAGE 8: Summary and Report Scripts
  # -------------------------------------------------------------------------
  # reports:
    # generate_final_report: "scripts/protein_analysis/generate_final_report.py"  # EXCLUDED
